# Map the virtual sensors from |heatpump_*| to human-readable values
- sensor:
  #
  # 6.1 Main operational data
  #
  - unique_id: heatpump_outside_temp
    name: Aussentemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float') }}
  - unique_id: heatpump_return_temp
    name: Rücklauftemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_1')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_1') }}
  - unique_id: heatpump_warm_water_temp
    name: Warmwassertemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_2')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_2') }}
  - unique_id: heatpump_outgoing_temp
    name: Vorlauftemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_4')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_4') }}
  - unique_id: heatpump_source_output_temp
    name: Wärmequellenaustritt Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_6')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_6') }}
  - unique_id: heatpump_circuit_2_temp
    name: Temperatur 2. Heizkreis Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_8')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_8') }}
  - unique_id: heatpump_circuit_3_temp
    name: Temperatur 3. Heizkreis Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_9')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_9') }}
  - unique_id: heatpump_room_1_temp
    name: Raumtemperatur 1 Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_10')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_10') }}
  - unique_id: heatpump_room_2_temp
    name: Raumtemperatur 2 Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_11')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_11') }}
  - unique_id: heatpump_room_1_humidity
    name: Raumfeuchte 1 Wärmepumpe
    device_class: humidity
    unit_of_measurement: "%"
    state: >
      {{ int(states('sensor.heatpump_float_12')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_12') }}
  - unique_id: heatpump_room_2_humidity
    name: Raumfeuchte 2 Wärmepumpe
    device_class: humidity
    unit_of_measurement: "%"
    state: >
      {{ int(states('sensor.heatpump_float_13')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_13') }}
  - unique_id: heatpump_return_target_temp
    name: Rücklaufsolltemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_52')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_52') }}
  - unique_id: heatpump_circuit_2_water_target_temp
    name: Solltemperatur 2. Heizkreis Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_53')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_53') }}
  - unique_id: heatpump_circuit_3_water_target_temp
    name: Solltemperatur 3. Heizkreis Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_54')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_54') }}
  # 6.1: Main operational data - cooling
  - unique_id: heatpump_cooling_outgoing_temp
    name: Passiv Kühlen Vorlauftemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_18')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_18') }}
  - unique_id: heatpump_cooling_incoming_temp
    name: Passiv Kühlen Rücklauftemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_19')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_19') }}
  - unique_id: heatpump_cooling_incoming_secondary_temp
    name: Passiv/Aktiv Kühlen Rücklauftemperatur gem. Primärkreis Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_20')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_20') }}
  # 6.1: Main operational data - solar
  - unique_id: heatpump_solar_panel_sensor
    name: Kollektorfühler Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_9')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_9') }}
  - unique_id: heatpump_solar_storage
    name: Solarspeicher Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_22')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_22') }}
  # 6.1: Main operational data - ventilation
  - unique_id: heatpump_vent_outdoor_air_temp
    name: Aussenlufttemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_119')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_119') }}
  - unique_id: heatpump_vent_supply_air_temp
    name: Zulufttemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_120')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_120') }}
  - unique_id: heatpump_vent_exit_air_temp
    name: Ablufttemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_121')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_121') }}
  - unique_id: heatpump_vent_extraction_air_temp
    name: Fortlufttemperatur Wärmepumpe
    device_class: temperature
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_122')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_122') }}
  # ModbusTCP / pymodbus only support reading up to 123 registers
  # per request, so we can't get values for these unless we
  # start reading heatpump_float in two requests.
  # 
  # - unique_id: heatpump_vent_supply_fan_rpm
  #   # Drehzal Zuluftventilator Wärmepumpe
  #   device_class: speed
  #   unit_of_measurement: rpm
  #   state: >
  #     {{ int(states('sensor.heatpump_float_124')) / 10 }}
  #   availability: >
  #     {{ has_value('sensor.heatpump_float_124') }}
  # - unique_id: heatpump_vent_exhaust_fan_rpm
  #   # Drehzahl Abluftventilator Wärmepumpe
  #   device_class: speed
  #   unit_of_measurement: rpm
  #   state: >
  #     {{ int(states('sensor.heatpump_float_125')) / 10 }}
  #   availability: >
  #      {{ has_value('sensor.heatpump_float_125') }}

  #
  # 6.2 History
  #
  - unique_id: heatpump_compressor_1_hours
    name: Verdichter 1 Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_71')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_71') }}
  - unique_id: heatpump_compressor_2_hours
    name: Verdichter 2 Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_72')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_72') }}
  - unique_id: heatpump_primary_pump_hours
    name: Primärpumpe Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_73')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_73') }}
  - unique_id: heatpump_secondary_heater_hours
    name: 2. Wärmeerzeuger Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_74')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_74') }}
  - unique_id: heatpump_heating_pump_hours
    name: Heizungspumpe Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_75')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_75') }}
  - unique_id: heatpump_warm_water_pump_hours
    name: Warmwasserpumpe Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_76')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_76') }}
  - unique_id: heatpump_immersion_heater_hours
    name: Flanschheizung Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_77')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_77') }}
  - unique_id: heatpump_pool_pump_hours
    name: Schwimmbadpumpe Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_78')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_78') }}
  - unique_id: heatpump_addl_circulation_pump_hours
    name: Zusatzumwälzpumpe Betriebsstunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_float_70')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_70') }}


  #
  # 6.3 Settings
  #
  - unique_id: heatpump_translation
    name: Parallelverschiebung Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_integer_34')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_34') }}
  - unique_id: heatpump_room_temp
    name: Raumtemperatur Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_float_45')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_45') }}
  - unique_id: heatpump_fixed_target_temp
    name: Festwertsolltemperatur Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_35')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_35') }}
  - unique_id: heatpump_heating_curve_endpoint
    name: Heizkurvenendpunkt Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_36')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_36') }}
  - unique_id: heatpump_hysteresis
    name: Hysterese Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_float_46')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_46') }}
  - unique_id: heatpump_dynamic_cooling_target
    name: Solltemperatur dyn. Kühlung Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_41')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_41') }}
  # From firmware L22.9
  # Value is out of range of what we read in modbus.yaml
  #
  # - unique_id: heatpump_dynamic_cooling_target_hot
  #   name: Solltemperatur dyn. Kühlung ab 35°C Wärmepumpe
  #   unit_of_measurement: h
  #   state: >
  #     {{ int(states('sensor.heatpump_integer_132')) }}
  #   availability: >
  #     {{ has_value('sensor.heatpump_integer_132') }}

  # 6.3.2 2nd & 3rd auxiliary circuits
  - unique_id: heatpump_aux_select
    name: Auswahl Heizkreis 2/3 Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_integer_80')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_80') }}
  - unique_id: heatpump_aux_heating_curve_endpoint
    name: Heizkurvenendpunkt 2/3. Kreis Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_82')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_82') }}
  - unique_id: heatpump_aux_fixed_target_temp
    name: Festwertsolltemperatur 2/3. Kreis Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_83')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_83') }}
  - unique_id: heatpump_aux_translation
    name: Parallelverschiebung 2/3. Kreis Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_integer_84')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_84') }}
  - unique_id: heatpump_aux_mixer_minutes
    name: Mischerlaufzeit 2/3. Kreis Wärmepumpe
    unit_of_measurement: min
    state: >
      {{ int(states('sensor.heatpump_integer_85')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_85') }}
  - unique_id: heatpump_aux_mixer_hysteresis
    name: Mischerhysterese 2/3. Kreis Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_float_93')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_93') }}
  - unique_id: heatpump_aux_max_temp
    name: Maximale Temperatur 2/3. Kreis Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_integer_86')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_86') }}
  - unique_id: heatpump_aux_cooling_target_temp
    name: Raumsolltemperatur 2/3. Kreis Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_87')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_87') }}
  
  # 6.3.3 Modes
  - unique_id: heatpump_operating_mode
    name: Betriebsmodus Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_integer_13')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_13') }}
  - unique_id: heatpump_party_hours
    name: Partystunden Wärmepumpe
    unit_of_measurement: h
    state: >
      {{ int(states('sensor.heatpump_integer_14')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_14') }}
  - unique_id: heatpump_vacation_days
    name: Urlaubstage Wärmepumpe
    unit_of_measurement: d
    state: >
      {{ int(states('sensor.heatpump_integer_15')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_15') }}

  # 6.3.4 Warm water
  - unique_id: heatpump_warm_water_hysteresis
    name: Warmwasser Hysterese Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_integer_43')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_43') }}
  - unique_id: heatpump_warm_water_target_temp
    name: Warmwasser Solltemperatur Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_45')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_45') }}
  # Value out of range (not read in modbus.yaml)
  # - unique_id: heatpump_warm_water_target_temp_min
  #   name: Warmwasser Solltemperatur Minimal Wärmepumpe
  #   unit_of_measurement: °C
  #   state: >
  #     {{ int(states('sensor.heatpump_integer_143')) }}
  #   availability: >
  #     {{ has_value('sensor.heatpump_integer_143') }}
  - unique_id: heatpump_warm_water_target_temp_max
    name: Warmwasser Solltemperatur Maximum Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_46')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_46') }}

  # 6.3.5 Swimming pool
  - unique_id: heatpump_pool_hysteresis
    name: Swimmingpool Hysterese Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_integer_47')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_47') }}
  - unique_id: heatpump_pool_target_temp
    name: Swimmingpool Solltemperatur Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_49')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_49') }}

  # 6.3.5 Secondary heater
  - unique_id: heatpump_heater2_hysteresis
    name: 2. Wärmeerzeuger Hysterese Wärmepumpe
    unit_of_measurement: K
    state: >
      {{ int(states('sensor.heatpump_float_47')) / 10 }}
    availability: >
      {{ has_value('sensor.heatpump_float_47') }}
  - unique_id: heatpump_heater2_threshold_temp
    name: 2. Wärmeerzeuger Grenztemperatur parallel Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_18')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_18') }}
  - unique_id: heatpump_heater2_threshold_temp
    name: 2. Wärmeerzeuger Mischerlaufzeit Wärmepumpe
    unit_of_measurement: °C
    state: >
      {{ int(states('sensor.heatpump_integer_19')) }}
    availability: >
      {{ has_value('sensor.heatpump_integer_19') }}

  #
  # 6.4 Time automation (omitted)
  #

  #
  # 6.5 Status
  #
  - unique_id: heatpump_status
    name: Status Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_float_102')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_102') }}
  - unique_id: heatpump_lock
    name: Sperre Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_float_103')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_103') }}
  - unique_id: heatpump_error
    name: Störmeldung Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_float_104')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_104') }}
  - unique_id: heatpump_sensor_error
    name: Störmeldung Sensorik Wärmepumpe
    state: >
      {{ int(states('sensor.heatpump_float_105')) }}
    availability: >
      {{ has_value('sensor.heatpump_float_105') }}

  #
  # 7.2 Smart Grid Ready
  #
  - unique_id: heatpump_smart_grid_status
    name: Smart Grid Status Wärmepumpe
    state: >
      {{ {
            ("off", "off"): "yellow",
            ("off", "on"): "red",
            ("on", "off"): "green",
            ("on", "on"): "darkgreen"
          }[(states('binary_sensor.heatpump_coil_3'), states('binary_sensor.heatpump_coil_4'))] }}
    availability: >
      {{ has_value('binary_sensor.heatpump_coil_3') and has_value('binary_sensor.heatpump_coil_4') }}
  - unique_id: heatpump_smart_grid_mode
    name: Smart Grid Modus Wärmepumpe
    state: >
      {{ {
            0: "off",
            10: "yellow",
            11: "green",
            12: "red"
            13: "darkgreen"
          }[int(states('sensor.heatpump_integer_65')] }}
    availability: >
      {{ has_value('sensor.heatpump_integer_65') }}
